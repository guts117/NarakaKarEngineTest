#version 460 core
layout(local_size_x = 32, local_size_y = 32) in;

uniform float dt;
uniform float kappa;
uniform float sigma;
uniform float t0;

layout(rgba16f, binding = 0) uniform image3D velocity;
layout(binding = 1) uniform sampler3D temperature_READ;
layout(binding = 2) uniform sampler3D density_READ;

void main()
{
  ivec3 pixelCoords = ivec3(gl_GlobalInvocationID);

  float t = texelFetch(temperature_READ, pixelCoords, 0).x;
  float d = texelFetch(density_READ, pixelCoords, 0).x;

  vec3 force = vec3(0.0, (-kappa * d + sigma * (t - t0)), 0.0);
  vec3 oldVel = imageLoad(velocity, pixelCoords).rgb;

  barrier();
  vec3 newVel = oldVel + dt * force;
  imageStore(velocity, pixelCoords, vec4(newVel, 0.0f));
}